package ch09.Inner_And_out_Access.Out_Access;

public class A {
/*
 * 	중첩 클래스는 외부 클래스와 긴밀한 관계를 맺으면서 외부 클래스의 멤버(필드,메소드)에 접근할 수 있다.
 *  하지만 클래스가 어떻게 선언되었느냐에 따라 접근 제한이 있을수 있다.
 *  
 *   정적 멤버 클래스 내부에서는 외부 클래스의 필드와 메소드를 사용할때 제한이 따른다.
 *   
 *   인스턴스 내부클래스 : 외부클래스의 모든 필드와 메소드 사용 가능(정적 인스턴스 전부 사용가능)
 *   정적 내부클래스 : 외부 클래스의 정적 필드와 정적 메소드(정적만 사용가능)
 *   
 *   정적 클래스는 외부 객체가 없어도 사용 가능해야 하므로 바깥 클래스의 인스턴스 필드와 인스턴스 메소드는
 *   사용할지 못한다.(굳이 사용하려면 외부 객체 선언이 필요하다.)
 *   
 */
	
	//A의 인스턴스 필드와 메소드
	int field1;
	void method1() {}
	
	//A의 정적 필드와 메소드
	static int field2;
	static void method2(){}
	
	// 인스턴스 내부클래스
	
	class B{
		
		void methodB() {
			//인스턴스 멤버
			field1 = 10;
			method1();
			
			//정적 멤버
			field2 = 20;
			method2();
		}
	}
	
	static class C{
		
		void methodC() {
			
			//인스턴스 멤버
			//field1 = 10; 사용 불가능
			//method1();   사용 불가능
			
			//정적 멤버
			field2 = 20;
			method2();	
		}	
	}
}
