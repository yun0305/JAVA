package ch09.Nested_Interpace;

public class 설명 {

	//중첩인터페이스
	/*
	 * 중첩 인터페이스는 클래스의 멤버로 선언된 인터페이스를 말한다.
	 * 인터페이스를 클래스 내부에 선어하는 이유는 해당 클래스와(외부클래스) 긴밀한 관계를 맺는 구현객체를
	 * 만들기 위해서이다. 충첩 인터페이스는 다음과 같이 선언된다.
	 * 
	 * class A{
	 * [public|parivate] [static] interface B{
	 * 
	 * (상수)필드
	 * 추상메소드
	 * static메소드
	 * private메소드
	 * default 메소드
	 * 
	 * }
	 * }
	 * 
	 * 외부의 접근을 막지 않으려면 public을 붙이고 A클래스 내부에서만 사용하려면 private을 붙인다.
	 * 접근 제한자를 붙이지 않으면 같은 패키지에서만 접근이 가능하다. 그리고 A 객체 없이 B인터페이스를 사용할 수 있도록
	 * 하기 위해 static을 추가할수 있다.
	 * 
	 * 중첩 인터페이스는 안드로이드와 같은 UI프로그램에서 이벤트를 처리할 목적으로 많이 활용된다.
	 * 예를 들어 버튼을 클릭했을때 이벤트를 처리할 객체는 중첩 인터페이스를 구현해서 만든다. 다음 예제를 따라 작성하고 이해해보자
	 * 
	 */
	
	
}
