package ch09.instance_Nested_class;

public class NestedClass {
/*
 * 객체 지향 프로그램 에서는 클래스 간에 서로 긴밀한 관계를 맺고 상호작용한다. 클래스가 여러 클래스와 관계를
 * 맺는 경우에는 독립적으로 선언하는것이 좋으나. 특정 클래스만 관계를 맺을 경우에는 중첩 클래스로 선언하는 것이
 * 유지보수에 도움이 되는 경우가 많다.
 * 충첩 클래스란 클래스 내부(선언부)에 선언한 클래스를 말하는데 중첩 클래스를 사용하면 클래스의 멤버를 쉽게
 * 사용할 수 있고 외부에는 중첩 관계 클래스를 감춤으로서 코드의 복잡성을 줄일 수 있다는 장점이 있다.
 * 
 * 중첩 클래스는 선언하는 위치에 따라 두가지로 구분된다. 클래스의 멤버로서 선언되는 중첩 클래스를 멤버 클래스라고 하고
 * 메소드 내부에서 선언되는 중첩 클래스를 로컬 클래스라고 한다.
 *   --------------------------------------------------------------------------------------------ㅣ
 *  ㅣ     ㅣ선언 위치에 따른 분류ㅣ 		ㅣ          ㅣ 선언 위치 ㅣ       ㅣ       ㅣ 객체 생성 조건ㅣ       ㅣ
 *  ㅣ		      					ㅣ                             ㅣ                             ㅣ
 * 	ㅣ			 ㅣ 인스턴스 ㅣ        ㅣ          classA{            ㅣ         A객체를 생성해야만		 ㅣ
 * 	ㅣ		     ㅣ맴버 클래스ㅣ		ㅣ          class B{...}       ㅣ        B객체를 생성할 수 있음	 ㅣ	
 *  ㅣ  								ㅣ         }                   ㅣ                             ㅣ
 *  ㅣㅣ멤버 클래스ㅣ------------------------------------------------------------------------------- ㅣ
 *  ㅣ 			             		ㅣ                             ㅣ                             ㅣ
 *  ㅣ                               ㅣ                             ㅣ		A객체를 생성하지 않아도   ㅣ
 *  ㅣ 			  ㅣ정적 멤버ㅣ		ㅣ        class A{             ㅣ		B객체를 생성할수 있음     ㅣ 
 *  ㅣ 		       ㅣ클래스ㅣ			ㅣ        static class B{...}  ㅣ			                 ㅣ
 *  ㅣ 								ㅣ        }                    ㅣ                             ㅣ 
 *  ㅣ                              ㅣ                             ㅣ                             ㅣ
 *   --------------------------------------------------------------------------------------------ㅣ
 * 	ㅣ								ㅣ								ㅣ		                     |
 *  ㅣ                               ㅣ        class A{              ㅣ          method가 실행할 떄만 |
 *  ㅣ ㅣ로컬 클래스ㅣ                  ㅣ         void mrthod(){		ㅣ			B객체를 생성할 수 있음|							
 *  ㅣ                               ㅣ       		class B{...}    ㅣ                            |
 *  ㅣ                               ㅣ       }                      ㅣ                            |   
 *  ㅣ                               ㅣ      }                       ㅣ                            |
 *   ---------------------------------------------------------------------------------------------  
 
 *중첩 클래스도 하나의 클래스이기 때문에 컴파일하면 바이트 코드 파일(.class)이 별도로 생성된다.
 *멤버 클래스일 경우 바이트코드 파일 이름은 다음과 같이 정렬된다
 *
 *             A $ B .class (A는 바깥 클래스, B는 멤버 클래스)
 *             
 *로컬 클래스일 경우에는 다음과 같이 $1이 포함된 바이트 코드 파일이 생성된다.
 *
 *			  A $1 B .class (A는 바깥 클래스, B는 멤버 클래스)
 */
}
