package ch06.member;

public class Car_Instance {
	//인스턴스 멤버
	/*
	 * 인스턴스 멤버는 객체를 생성해야지만 사용할수 있다
	 * 객체 안에는 필드가 있고 인스턴스 메소드의 정의는 클래스영역에 정의되어있다.
	 * (클래스 영역에 저장되있다는 뜻과 같다)
	 * 
	 * 그러면 인스턴스 메소드가 아닌가?
	 * 인스턴스 메소드 맞다 인스턴스 안에는 없지만 인스턴스 메소드는 객체를 통해서만 접근할수 있기 때문에
	 * 소속은 인스턴스가 맞다
	 *  
	 * 객체의 필드(데이터)는 객체마다 다르다 하지만 메소드(동작)는 인스턴스마다 파라미터값은 다르지만
	 * 동작 매커니즘이 다르지 않다.
	 * 
	 * 그렇기 때문에 객체마다 만들어 주는것은 메모리 손실이기 때문에 객체마다 만들어 주지 않고
	 * 클래스 영역에 메소드를 정의하고
	 * 인스턴스가 생성될때마다 클래스에 정의되있는 메소드와 인스턴스가 함께 실행된다.
	 * 
	 * 인스턴스 메소드는 클래스에 정의되어 있으며, 호출 시에는 특정 인스턴스의 데이터와 함께 실행된다
	 * 반드시 객체를 통해서만 접근할 수 있다.
	 * 
	 * (추가설명)
	 * 인스턴스 멤버 (Instance Member):
	 *
	 * 객체의 상태를 나타내는 변수들이나 객체의 동작을 수행하는 메서드를 인스턴스 멤버로 선언합니다.
     * 객체를 생성할 때마다 해당 멤버의 복사본이 생성되며, 객체의 상태를 나타내므로 객체 각각이 다른 값을 가질 수 있습니다.
     * 주로 객체의 상태를 나타내기 위해 사용됩니다.
	 * 
	 */
		//필드 선언
		static double pi = 3.14;
		String model;
		int speed;
		//생성자 선언
		Car_Instance(String model){
			this.model = model;// 매개변수를 필드에 대입(this 생략 불가)
			
		}
		//메소드 선언
		void setSpeed(int speed) {
			this.speed = speed;// 매개변수를 필드에 대입(this 생량 불가)
		}
		void run() {
			this.setSpeed(100);
			System.out.println(this.model+" 이달립니다(시속"+ this.speed + "Km/h)");
		}
		
		static void test() {
			String testString = "String";
			int testInt = 0;
			System.out.println("test"+ testInt);
		}
}

/*
 * /*
	 * 
	 * <클래스의 멤버들이 메모리에 저장되는 위치>
	 * 
	 * 1.정적 멤버 (static 필드 & 메소드)
	 * 
	 * 		1.클래스가 로드될 때 한 번만 메소드 영역에 저장됨
	 * 
	 * 		2.객체 없이 클래스 이름으로 접근 가능
	 * 
	 * 		3.모든 객체가 동일한 값을 공유함
	 * 
	 * 		4.정적 메소드에서 인스턴스 필드/메소드 직접 접근 불가능
	 * 
	 * 2.인스턴스 멤버(필드 & 메소드)
	 * 		
	 * 		1.객체가 생성될 떄마다 개별적으로 힘에 저장됨
	 * 
	 * 		2.메소드는 클래스 로딩 시 메소드 영역에 저장되지만, 실행될 때 스택에 적재됨
	 * 
	 * 		3.객체마다 독립적인 필드를 가짐
	 * 
	 * 		4.반드시 객체를 통해 접근 가능
	 * 
	 * 3.지역 변수
	 * 		
	 * 		1.메소드 내부에서 선언된 변수는 스택(Stack)에 저장됨
	 * 
	 * 		2.메소드 실행이 끝나면 자동으로 제거됨
	 * 
	 * 
	 * 메서드 영역 (Method Area)
	----------------------------
	| Car_Instance 클래스 정보  |
	| static double pi = 3.14   |  <- 클래스 로드 시 저장됨
	| static void test() {...}  |  <- 클래스 로드 시 저장됨
	| Car_Instance() {...}      |  <- 생성자 정보 저장됨
	| void setSpeed() {...}     |  <- 메서드 정보 저장됨
	| void run() {...}          |  <- 메서드 정보 저장됨
	----------------------------

		힙 영역(Heap)
	----------------------------
	| myCar 객체 (Car_Instance) |
	| model = "Hyundai"         |
	| speed = 100               |  <- run() 실행 후 변경됨
	----------------------------

		스택 영역(Stack)
	----------------------------
	| main() 호출 정보          |
	| myCar (힙 영역 주소 저장) |
	| run() 실행 정보           |
	| setSpeed(100) 실행 정보   |
	| testString, testInt (test() 내부 지역 변수) |
	----------------------------

	
 */
		
