package ch06.member;

public class 자바_클래스_로딩_및_컴파일_과정_요약 {

	/*
	 * 1.자바 코드의 변환 과정(.java -> .class)
	 * 		
	 * 		1.개발자가 .java파일을 생성
	 * 		2.자바 컴파일러(javac)가 .java 파일을 .class 파일(바이트코드)로 변환
	 * 		3.변환된 .class 파일은 디스크(파일 시스템)에 저장됨
	 * 		4.이 단계에서는 클래스 로더가 개입하지 않는다.
	 * 
	 * 2.클래스 로딩(Class Loading) 과정
	 * 
	 * 		1.JVM실행 -> 클래스 로더가 .class 파일을 찾아서 메모리에 적재
	 * 		2.클래스가 처음 참조될 떄 (new, static 접근, class.forName("Class.class");) 로드됨
	 * 		3.이떄 메소드 영역에 클래스 정보 저장
	 * 		4.링크 과정에서 필드 초기화 및 심볼릭 참조 해결
	 * 		5.이제 클래스가 실행 가능 상태가 됨
	 * 
	 * 3.클래스가 로드되는 트리거(클래스 로딩이 발생하는 조건)
	 * 		
	 * 		1.new 키워드를 사용하여 객체 생성
	 * 		2.static 필드 또는 static 메소드 접근
	 * 		3.class.forName() 호출
	 * 		4.자식 클래스가 로드될 때 부모 클래스도 함께로드 
	 * 
	 * 
	 * 4.클래스 로딩이 일어나지 않는 경우
	 * 		
	 * 		1.사용되지 않는 클래스는 지연 로딩됨(불필요한 로딩 방지)
	 * 		2.예를 들어, A a; 선언만 해두고 사용하지 않으면 A는 로드되지 않음
	 * 
	 * 5.클래스 로딩과 .class 파일의 관계
	 * 
	 * 		1.컴파일러가 먼저.java를 -> .class로 변환 후 .class 파일을 생성하고 저장한 후 , jvm 실행 시 클래스 로더가 해당 파일을
	 * 		메모리에 적재한다.
	 */
	
	
}
