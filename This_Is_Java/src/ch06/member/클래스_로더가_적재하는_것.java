package ch06.member;

public class 클래스_로더가_적재하는_것 {

	/*
	 * 1.클래스 로더가 적재하는 것
	 * 
	 * 		클래스가 처음 로드될 떄 클래스 로더는 .class 파일을 읽고 jvm의 메소드 영역에 다음 정보를 저장한다.
	 * 		
	 * 		1.클래스 이름
	 * 			패키지를 포함한 클래스의 전체이름(예:com.example.Myclass)
	 * 
	 *  	2.클래스의 부모 클래스 정보
	 *  		어떤 클래스를 상속받았는지 (extends 대상)
	 *  
	 *  	3.인터페이스 정보
	 *  		어떤 인터페이스를 구현했는지(implements 대상)
	 *  
	 *  	4.클래스의 메소드 목록
	 *  		인스턴스 메소드와 static 메소드의 정보 (메소드 이름, 반환 타입, 매개변수 정보 등)
	 *  		메소드의 실행 코드는 아직 실행되지 않음
	 *  
	 *  	5.필드 목록
	 *  		인스턴스 변수와 static 변수의 정보(변수 이름, 데이터 타입 등)
	 *  		static 변수는 기본값 int -> 0, boolean 으로 초기화됨
	 *  
	 *  	6.static 변수와 static 블록
	 *  		static 변수는 초기화되고 static 블록이 실행된다.
	 *  
	 *  	7.런타임 상수 풀
	 *  		클래스에서 사용하는 상수들을 저장함
	 *  
	 * 2.클래스 로더가 적재하지 않는것
	 *  	
	 *  	1.객체(인스턴스) 자체
	 *  		클래스 로딩은 클래스 정보를 메모리에 적재하는 과정이며, 객체는 생성되지 않음
	 * 			new 키워드를 통해 객체를 생성해야 힙 메모리에 객체가 생성됨
	 * 
	 *  	2. 메소드의 실행결과		
	 *  		메서드의 실행 자체는 클래스 로딩과 무관
	 *  		실행 시점에 JVM의 스택(Stack)에서 처리됨
	 *  
	 *  메모리 영역	저장되는 것
	 *		메서드 영역(Method Area) : 클래스 정보 (메서드, 필드, 인터페이스, 부모 클래스 등)
	 *		힙(Heap) : 영역	new를 사용해 생성한 객체(인스턴스)
	 *		스택(Stack) : 영역	메서드 실행 중 지역 변수, 매개변수, 연산 정보
	 * 		
	 *  
	 */
	
}
