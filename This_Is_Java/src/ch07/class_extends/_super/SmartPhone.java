package ch07.class_extends._super;

public class SmartPhone extends Phone {

	/*
	 * 자식 객체를 생성할 때는 **자식 객체만 생성하지 않는다.**
	 * **부모 객체를 먼저 생성**한 후에 자식 객체가 생성된다.
	 * 
	 * 객체를 생성하는 키워드는 **생성자(Constructor)**이며,
	 * 생성자 안에 `super();`가 부모 생성자를 호출하는 부분이다.
	 * 
	 * 규칙:
	 * 
	 * 1. `super();`로 부모 객체를 생성할 때는 **반드시 자식 생성자의 맨 위에서 호출해야 한다.**
	 *    (객체가 만들어지는 순서는 다음과 같다:
	 *    - 부모 생성자가 실행이 완료되어 부모 객체가 생성된 다음, 자식 객체가 생성된다.
	 *    - 따라서 자식 생성자 안에서 `super();`는 반드시 **맨 위에 위치**해야 한다.
	 * 
	 *    부모 객체를 먼저 생성하는 이유는,
	 *    부모 클래스의 멤버(필드와 메서드)를 자식 클래스가 **상속받아 사용할 수 있도록 보장**하기 위해서다.)
	 * 
	 * 2. 부모 생성자가 기본 생성자일 경우, `super();`를 생략할 수 있다.
	 *    하지만 **부모 클래스에 기본 생성자가 없고, 매개변수를 가진 생성자만 존재할 경우,**
	 *    자식 생성자에서 명시적으로 부모 생성자를 호출(`super(매개값);`)해야 한다.
	 *    (즉, 부모 생성자가 기본 생성자가 아닐 경우, `super();` 또는 `super(매개값);`을 명시적으로 작성해야 한다.)
	 */

	
	public SmartPhone(String color,String model) {
		super();//실행순서 1
		
		this.color = color;//실행순서 2 ...
		this.model = model;
		
		System.out.println("Smart Phone(String color String model)생성자 실행됨");
	}
	
}
