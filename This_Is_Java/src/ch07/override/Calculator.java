package ch07.override;

public class Calculator {

	//메소드 오버라이딩
	/*
	 * 부모 클래스의 모든 메소드가 자식 클래스에게 맞게 설계되어 있다면 가장 이상적인
	 * 상속이지만, 어떤 메소드는 자식 클래스가 사용하기에 적합하지 않을수 있다. 이러한 메소드는 자식 클래스에서
	 * 재정의해서 사용한다. 이것을 메소드 오버라이딩 이라고 한다
	 * 
	 * 메소드 오버라이딩은 상속된 메소드를 자식 클래스에서 재정의하는 것을 말한다. 메소드가 오버라이딩
	 * 되었다면 해당 부모 메소드는 숨겨지고, 자식 메소드가 우선적으로 사용된다
	 * 
	 * 사용규칙
	 * 1. 부모 메소드의 선언부와 동일해야 한다(리턴 타입, 메소드 이름, 매개변수)
	 * 
	 * 2. 접근 제한을 더 강하게 오버라이딩할 수 없다(더 약하게는 가능)
	 * 
	 * 3. 새로운 예외를 throws할 수 없다(예외는 10장 참고)
	 *  
	 * 4. staitc 메소드는 재정의 대상이 아니다. 
	 */
	
	//메소드 선언
	public double areaCircle(double r) {
		System.out.println("calculator 객체의 areaCircle()  실행");
		return 3.141592*r*r;
	}
	
	public void test() {
		
	}


}

