package ch14.multi_thread;

/*
 *  <멀티 스래드 개념>
 *  운영체제는 실행 중인 프로그램을 프로세스로 관리한다. 멀티 태스킹은 두 가지 이상의
 *  작업을 동시에 처리하는 것을 말하는데. 이때 운영체제는 멀티 프로세스를 생성해서
 *  처리한다. 하지만 멀티 태스킹이 꼭 멀티 프로세스를 뜻하지는 않는다.
 * 
 *  하나의 프로세스 내에서 멀티 태스킹을 할 수 있도록 만들어진 프로그램들도 있다.
 *  예를 들어 메신저는 채팅 작업을 하면서 동시에 파일 전송 작업을 수행하기도 한다.
 * 
 *  하나의 프로세스가 두 가지 이상의 작업을 처리할 수 있는 이유는 멀티 스레드가 있기 때문이다.
 *  스레드는 코드의 실행 흐름을 말하는데, 프로세스 내에 스레드가 두 개라면 두개의 코드 실행 흐름이 생긴다는 의미다.
 *  멀티 프로세스가 프로그램 단위의 멀티 태스킹이라면 멀티 스레드는 프로그램 내부에서의 멀티 태스킹
 *  이라고 볼 수 있다.
 *  
 *  멀티 프러세스들은 서로 독립적이므로 하나의 프로세스에서 오류가 발생해도 다른 프로세스에서 영향을
 *  미치지 않는다. 하지만 멀티 스레드는 프로세스 내부에서 생성되기 때문에 하나의 스레드가 예외를 발생시키면
 *  프로세스가 종료되므로 다른 스레드에게 영향을 미친다.
 *  
 *  예를 들어 워드와 엑셀을 동시에 사용하는 도중에 워드에 오류가 생겨 먹통이 되더라도 엑셀은 여전히 사용 가능하다.
 *  그러나 멀티 스레드로 동작하는 메신저의 경우 파일을 전송하는 스레드에서 예외가 발생하면서 메신저 프로세스 자체가
 *  종료되기 때문에 채팅 스레드도 같이 종료된다, 그렇기 때문에 멀티 스레드를 사용할 경우에는 예외 처리에 만전을 기해야 한다. 
 *  
 *  멀티 스레드는 데이터를 분할해서 병렬로 처리하는 곳에서 사용하기도 하고, 안드로이드 앱에서 네트워크 통신을 하기 위해 사용하기도 한다.
 *  또한 다수의 클라이언트 요청을 처리하는 서버를 개발할 때에도 사용된다. 프로그램 개발에 있어서 멀티 스래드는 꼭 필요한 기능이기 때문에 반드시 이해하고
 *  활용할 수 있도록 한다.
 *  
 */

public class Thread {

	
	
}
