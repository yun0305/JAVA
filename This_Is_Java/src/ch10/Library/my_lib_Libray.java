package ch10.Library;

public class my_lib_Libray {

	/*
	 * <라이브러리 사용법(jar)>
	 * 프로젝트에서 자수 쓰이는 패키지 들은 사용자가 직접 라이브러리로 만들어서 관리할수 있다
	 * 
	 * 만약 my_lib라는 프로젝트에서 pak1과 pak2의 패키지 안에 A와B라는 메소드 들이 자주 쓰인다면
	 * 바이트 코드를 JAR로 압축해서 다른 프로젝트에서 사용할수 있다.
	 * 프로젝트 안에 dist라는 폴더를 만들어 주고
	 * 
	 * 프로젝트를 선택하고 Export를 선택하면 JAR파일이 있을것이다 여기서 압축할 소스를 선택할수 있는데
	 * 필요한 패키지만 선택해서 압축할 위치를 선택하면 된다.(예제에서는 dist에 압축을 풀어준다.)
	 * 
	 * 이제 my_lib.JAR파일을 다른 프로젝트에서 사용해 볼거다.그냥 복사해서 사용할 수 있다.
	 * 그리고 보통 외부(인터넷)에서 가지고온 라이브러리 파일은 프로젝트에 복사해 놓고 쓰지만,
	 * 이번 경우에는 그냥 복사해서 쓰면 무분별하게 복사가 되니까 보기 안좋다.
	 * 이번 예제에서는 참조 시켜서 사용할거다
	 * 
	 * 라이브러리를 사용하고 싶은 프로젝트를 우클릭하면 Build path가 나올거다 
	 * Configure Build path를 선택한다.
	 * 
	 * 그러면 소스, 프로젝트,라이브러리...가 있다.
	 * jar 파일을 참조하고 싶으면 라이브러리에서 사용하면된다.
	 * 그리고 calss path에 Add External JARs로 my_lib에 dist에 만들어 놓은 JAR파일을 선택해서
	 * 넣어준다.
	 * 
	 * 원리는 class path로 my_lib.jar 라이브러리의 주소를 추가해서
	 *  my_appliction 프로젝트가 참조해서 사용한다. 이과정이 끝나면
	 *  my_application 프로젝트 안에 Referenced Libraries 라이브러리가 생기는데 그안에 
	 *  my_lib.jar 이 들어있다. 이제 my_application에서 자유롭게 해당 라이브러리를 사용할수 있다.
	 * 
	 * 
	 * 
	 * 
	 */
	
}
