package ch12.DTO;

public class DAO {

	/*
	 * 데이터베이스의 data에 접근하기 위한 객체이며 데이터베이스 접근을 하기 위한 로직과
	 * 비즈니스 로직을 분리하기 위해 사용된다.
	 * 
	 * 알기 쉽게 클라이언트가 요청을하면 DAO가 데이터베이스와 클라이언트의 사이를 연결하는 역할을
	 * 한다고 생각하면된다
	 * 
	 * 데이터베이스 접근과 비즈니스 로직 분리
	 * DAO는 데이터베리스에 접근하고 데이터를 가져오는 역할만 담당하게 된다.
	 * 비즈니스 로직(클라이언트에 요청을 실제로 처리하는 작업)은  DAO 와 분리한다.
	 * 즉 DAO는 데이터베이스 작엄만 전문적으로 처리하는 객체이다.
	 * 
	 * 
	 * 사용하는 이유는 크게 3가지이다 
	 * 
	 * 1.코드의 재사용성{
	 * 		데이터베이스와 관련된 작업(CRUD)를 하나의 DAO 클래스에서 관리하므로 중복코드를 줄이고
	 * 		재사용할수 있다.
	 * }
	 * 
	 * 2.유지보수성 향성{
	 * 		데이터베이스 접근 로직이 분리되어 있으므로 데이터베이스가 변경되거나 로직을 수정해야 
	 * 		할 때 DAO 클래스만 수정하면된다 
	 * }
	 * 
	 * 3.비즈니스 로직과 분리{
	 * 		애플리케이션은 핵심로직(비즈니스 로직) 은 데이터베이스의 세부사항을 몰라도된다.
	 * 		ex) 회원가입 로직에서는 DAO를 호출해서 회원정보를 데이터베이스에 저장하도록만 지시한다. 
	 * }
	 * 
	 */
	
	
}
